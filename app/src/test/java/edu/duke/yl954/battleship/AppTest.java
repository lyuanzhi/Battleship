/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package edu.duke.yl954.battleship;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.parallel.ResourceAccessMode;
import org.junit.jupiter.api.parallel.ResourceLock;
import org.junit.jupiter.api.parallel.Resources;

import static org.junit.jupiter.api.Assertions.*;

import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PrintStream;

class AppTest {

    /**
     * Helper function to test the whole game with different inputs.
     */
    private void mainHelper(String inFile, String outFile) throws IOException {
        // collect the output using ByteArrayOutputStream
        ByteArrayOutputStream bytes = new ByteArrayOutputStream();
        // out writes its data into bytes
        PrintStream out = new PrintStream(bytes, true);
        InputStream input = getClass().getClassLoader().getResourceAsStream(inFile);
        assertNotNull(input);
        InputStream expectedStream = getClass().getClassLoader().getResourceAsStream(outFile);
        assertNotNull(expectedStream);
        // store System.in and System.out
        InputStream oldIn = System.in;
        PrintStream oldOut = System.out;
        try {
            // Changing System.in and System.out
            System.setIn(input);
            System.setOut(out);
            App.main(new String[0]);
        } finally {
            // recover System.in and System.out
            System.setIn(oldIn);
            System.setOut(oldOut);
        }
        String expected = new String(expectedStream.readAllBytes());
        String actual = bytes.toString();
        assertEquals(expected, actual);
    }

    /**
     * Test the whole game with different inputs and outputs.
     */
    @Test
    @ResourceLock(value = Resources.SYSTEM_OUT, mode = ResourceAccessMode.READ_WRITE)
    void test_main() throws IOException {
        mainHelper("input1.txt", "output1.txt");
        mainHelper("input2.txt", "output2.txt");
        mainHelper("input3.txt", "output3.txt");
        mainHelper("input4.txt", "output4.txt");
        mainHelper("input5.txt", "output5.txt");
    }
}
